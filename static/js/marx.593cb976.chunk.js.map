{"version":3,"sources":["views/think-society/chapter1.js","views/marx/AnswerQuestion.js","views/marx/ChoiceQuestion.js","views/marx/chapter.js"],"names":["Ahapter1","Wrap","props","title","questions","formatExplanation","str","replace","header","bordered","dataSource","renderItem","item","Item","className","Text","mark","number","style","fontSize","dangerouslySetInnerHTML","__html","Array","isArray","answer","explanation","Maks","Group","value","direction","options","map","c","key","color","text","parmas","useParams","chioce","ChoiceQuestion","marxObj","id","AnswerQuestion","cate"],"mappings":"qHAAA,2BAUeA,UARE,WAChB,OACC,+F,6EC8CaC,EA9CF,SAACC,GAAW,IACbC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,UACTC,EAAoB,SAACC,GAEvB,OADYA,EAAIC,QAAQ,UAAM,gBAAWA,QAAQ,WAAO,iBAI5D,OACI,kBAAC,IAAD,CACIC,OAAQ,4BAAKL,GACbM,UAAQ,EACRC,WAAYN,EACZO,WAAY,SAACC,GAAD,OACR,kBAAC,IAAKC,KAAN,KACI,yBAAKC,UAAU,QACX,kBAAC,IAAWC,KAAZ,CAAiBC,MAAI,GAArB,IAAwBJ,EAAKK,OAA7B,KACA,yBAAKC,MAAO,CAAEC,SAAU,KACpB,4BAAKP,EAAKT,OACV,wBAAIW,UAAU,YAAd,gBACA,yBACIA,UAAU,SACVM,wBAAyB,CACrBC,OAAQhB,EACJiB,MAAMC,QAAQX,EAAKY,QAAUZ,EAAKY,OAAO,GAAKZ,EAAKY,WAI9DZ,EAAKa,YACF,oCACI,wBAAIX,UAAU,YAAd,gBACA,yBACIA,UAAU,cACVM,wBAAyB,CACrBC,OAAQhB,EAAkBO,EAAKa,iBAI3C,Y,kBCkBjBC,EAvDF,SAACxB,GAAW,IACbC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,UAOf,OACI,kBAAC,IAAD,CACII,OAAQ,4BAAKL,GACbM,UAAQ,EACRC,WAAYN,EACZO,WAAY,SAACC,GAAD,OACR,kBAAC,IAAKC,KAAN,KACI,yBAAKC,UAAU,QACX,kBAAC,IAAWC,KAAZ,CAAiBC,MAAI,GAArB,IAAwBJ,EAAKK,OAA7B,KACA,yBAAKC,MAAO,CAAEC,SAAU,KACpB,4BAAKP,EAAKT,MAAMI,QAAQ,SAAK,UAAOK,EAAKY,OAAO,KAChD,6BACI,kBAAC,IAAMG,MAAP,CAAaC,MAAOhB,EAAKY,OAAO,IAC5B,kBAAC,IAAD,CAAOK,UAAU,YACZjB,EAAKkB,QAAQC,KAAI,SAACC,GAAD,OACd,kBAAC,IAAD,CACIC,IAAKD,EAAEJ,MACPA,MAAOI,EAAEJ,MACTV,MAAO,CACHgB,MAAOF,EAAEJ,QAAUhB,EAAKY,OAAO,GAAK,UAAY,KAGnDQ,EAAEJ,MAPP,IAOeI,EAAEG,YAMhCvB,EAAKa,YACF,oCACI,wBAAIX,UAAU,YAAd,gBACA,yBACIA,UAAU,cACVM,wBAAyB,CACrBC,QAvCbf,EAuCuCM,EAAKa,YAtCvDnB,EAAIC,QAAQ,UAAM,gBAAWA,QAAQ,UAAM,qBA0C/B,QA3CF,IAACD,M,eCgBhBoB,UAjBF,WACZ,IAAMU,EAASC,cAaf,MAXqB,CACpBC,OAAQ,kBAACC,EAAD,CACPpC,MAAOqC,IAAQJ,EAAOK,IAAItC,MAC1BC,UAAWoC,IAAQJ,EAAOK,IAAIrC,YAE/BoB,OAAQ,kBAACkB,EAAD,CACPvC,MAAOqC,IAAQrC,MACfC,UAAWoC,IAAQJ,EAAOK,IAAIrC,aAIZoC,IAAQJ,EAAOK,IAAIE","file":"static/js/marx.593cb976.chunk.js","sourcesContent":["import React from 'react'\n\nconst Ahapter1 = () => {\n\treturn (\n\t\t<div>\n\t\t\t毛泽东思想和社会主义\n\t\t</div>\n\t)\n}\n\nexport default Ahapter1","import { List, Typography } from \"antd\";\n\nimport React from \"react\";\n\nconst Wrap = (props) => {\n    const { title, questions } = props;\n    const formatExplanation = (str) => {\n        const res = str.replace(/：/g, \"：<br />\").replace(/。/gi, \"。<br />\");\n        return res;\n    };\n\n    return (\n        <List\n            header={<h2>{title}</h2>}\n            bordered\n            dataSource={questions}\n            renderItem={(item) => (\n                <List.Item>\n                    <div className=\"flex\">\n                        <Typography.Text mark>[{item.number}]</Typography.Text>\n                        <div style={{ fontSize: 14 }}>\n                            <h4>{item.title}</h4>\n                            <h3 className=\"exp_desc\">答案</h3>\n                            <div\n                                className=\"answer\"\n                                dangerouslySetInnerHTML={{\n                                    __html: formatExplanation(\n                                        Array.isArray(item.answer) ? item.answer[0] : item.answer\n                                    ),\n                                }}\n                            ></div>\n                            {item.explanation ? (\n                                <>\n                                    <h3 className=\"exp_desc\">题解</h3>\n                                    <div\n                                        className=\"explanation\"\n                                        dangerouslySetInnerHTML={{\n                                            __html: formatExplanation(item.explanation),\n                                        }}\n                                    ></div>\n                                </>\n                            ) : null}\n                        </div>\n                    </div>\n                </List.Item>\n            )}\n        />\n    );\n};\n\nexport default Wrap;\n","import { List, Radio, Space, Typography } from \"antd\";\n\nimport React from \"react\";\n\nconst Maks = (props) => {\n    const { title, questions } = props;\n\n    const formatExplanation = (str) => {\n        const res = str.replace(/：/g, \"：<br />\").replace(/。/g, \"。<br />\");\n        return res;\n    };\n\n    return (\n        <List\n            header={<h2>{title}</h2>}\n            bordered\n            dataSource={questions}\n            renderItem={(item) => (\n                <List.Item>\n                    <div className=\"flex\">\n                        <Typography.Text mark>[{item.number}]</Typography.Text>\n                        <div style={{ fontSize: 14 }}>\n                            <h4>{item.title.replace(\"（\", \"（ \" + item.answer[0])}</h4>\n                            <div>\n                                <Radio.Group value={item.answer[0]}>\n                                    <Space direction=\"vertical\">\n                                        {item.options.map((c) => (\n                                            <Radio\n                                                key={c.value}\n                                                value={c.value}\n                                                style={{\n                                                    color: c.value === item.answer[0] ? \"#18cf86\" : \"\",\n                                                }}\n                                            >\n                                                {c.value} {c.text}\n                                            </Radio>\n                                        ))}\n                                    </Space>\n                                </Radio.Group>\n                            </div>\n                            {item.explanation ? (\n                                <>\n                                    <h3 className=\"exp_desc\">题解</h3>\n                                    <div\n                                        className=\"explanation\"\n                                        dangerouslySetInnerHTML={{\n                                            __html: formatExplanation(item.explanation),\n                                        }}\n                                    />\n                                </>\n                            ) : null}\n                        </div>\n                    </div>\n                </List.Item>\n            )}\n        />\n    );\n};\n\nexport default Maks;\n","import AnswerQuestion from \"./AnswerQuestion\";\nimport ChoiceQuestion from \"./ChoiceQuestion\";\nimport React from \"react\";\nimport { marxObj } from \"../../config\";\nimport { useParams } from \"react-router\";\n\nconst Maks = () => {\n\tconst parmas = useParams();\n\n\tconst randerResult = {\n\t\tchioce: <ChoiceQuestion\n\t\t\ttitle={marxObj[parmas.id].title}\n\t\t\tquestions={marxObj[parmas.id].questions}\n\t\t/>,\n\t\tanswer: <AnswerQuestion\n\t\t\ttitle={marxObj.title}\n\t\t\tquestions={marxObj[parmas.id].questions}\n\t\t/>,\n\t}\n\n\treturn randerResult[marxObj[parmas.id].cate]\n};\n\nexport default Maks;\n"],"sourceRoot":""}