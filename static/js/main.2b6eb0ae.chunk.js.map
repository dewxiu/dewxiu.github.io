{"version":3,"sources":["serviceWorker.js","layout/Spin/index.js","redux/action-types.js","redux/reducers.js","redux/store.js","index.js","router/index.js","layout/MenuList/index.js"],"names":["Boolean","window","location","hostname","match","Spin","className","style","background","zIndex","loading","fill","fontSize","ADD_COUNT","DEL_COUNT","ADD_ASYNC_COUNT","initAddress","name","combineReducers","counter","state","type","homeReducer","action","data","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","menus","path","title","icon","badge","Badge","dot","show","component","lazy","active","RootRouter","withRouter","exact","from","to","MenuRouter","map","route","idx","key","props","router","routes","MenuList","history","useHistory","useLocation","children","safeArea","activeKey","pathname","onChange","value","push","item","Item"],"mappings":"4LAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sECLSC,EAVF,WACX,OACE,yBACEC,UAAU,oDACVC,MAAO,CAAEC,WAAY,cAAeC,OAAQ,MAE5C,kBAAC,IAAD,CAAQC,SAAO,EAACC,KAAK,OAAOJ,MAAO,CAAEK,SAAU,Q,0BCRxCC,EAAY,YACZC,EAAY,YACZC,EAAkB,kBCY/B,IAAMC,EAAc,CAAEC,KAAM,gBAYbC,gCAAgB,CAC3BC,QAxBJ,WAAqC,IAApBC,EAAmB,uDAAX,EACrB,QADgC,wCACjBC,MACX,KAAKR,EACD,OAAOO,EAAQ,EACnB,KAAKN,EACD,OAAOM,EAAQ,EACnB,QACI,OAAOA,IAkBfE,YAbJ,WAAmD,IAA9BF,EAA6B,uDAArBJ,EAAaO,EAAQ,uCAC9C,OAAQA,EAAOF,MACX,KAAKN,EACD,OAAOQ,EAAOC,KAClB,QACI,OAAOJ,MCfJK,wBAAYC,EAAUC,8BAAoBC,0BAAgBC,OCiBzEC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,GACf,mBAZS,WACX,OACE,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAAC,IAAD,UAQJ,OAEFC,SAASC,eAAe,SLsGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,gCMnInB,8LAiBaC,EAAQ,CACnB,CACEC,KAAM,cACNC,MAAO,eACPC,KAAM,kBAAC,IAAD,MACNC,MAAOC,IAAMC,IACbC,MAAM,EACNC,UAAWC,gBAAK,kBACd,wDAGJ,CACER,KAAM,cACNC,MAAO,2BACPC,KAAM,kBAAC,IAAD,MACNI,MAAM,EACNH,MAAO,IACPI,UAAWC,gBAAK,kBACd,kCAGJ,CACER,KAAM,gBACNC,MAAO,2BACPC,KAAM,SAACO,GAAD,OAAaA,EAAS,kBAAC,IAAD,MAAkB,kBAAC,IAAD,OAC9CN,MAAO,MACPG,MAAM,EACNC,UAAWC,gBAAK,kBACd,kCAGJ,CACER,KAAM,iBACNC,MAAO,2BACPC,KAAM,kBAAC,IAAD,MACNI,MAAM,EACNC,UAAWC,gBAAK,kBACd,mCAMOE,EAAaC,aAAW,kBACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEX,KAAK,sBACLO,UAAWC,gBAAK,kBACd,yDAGJ,kBAAC,IAAD,CACER,KAAK,SACLO,UAAWC,gBAAK,kBACd,mCAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACER,KAAK,IACLZ,OAAQ,kBACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUwB,OAAO,EAAMC,KAAK,IAAIC,GAAG,gBACnC,kBAAC,IAAD,CACEd,KAAK,QACLO,UAAWC,gBAAK,kBACd,wCAOZ,kBAAC,IAAD,CAAOR,KAAM,IAAKZ,OAAQ,kBAAM,uDAKvB2B,EAAaJ,aAAW,WACnC,OACE,kBAAC,IAAD,KACGZ,EAAMiB,KAAI,SAACC,EAAOC,GAAR,OACT,kBAAC,IAAD,CACEC,IAAKF,EAAMjB,KACXA,KAAMiB,EAAMjB,KACZY,MAAOK,EAAML,MACbxB,OAAQ,SAACgC,GAAD,OACN,kBAACH,EAAMV,UAAP,iBAAqBa,EAArB,CAA4BC,OAAQJ,EAAMK,gBAIhD,kBAAC,IAAD,CAAOtB,KAAK,IAAIZ,OAAQ,kBAAM,wD,gCC5GpC,2CAiCemC,IA3BE,SAACH,GAChB,IAAMI,EAAUC,cACVlE,EAAWmE,cAKjB,OACE,yBAAK/D,UAAU,eACb,yBAAKA,UAAU,mBAAmByD,EAAMO,UACxC,yBAAKhE,UAAU,aACb,kBAAC,IAAD,CAAQiE,UAAQ,EAACC,UAAWtE,EAASuE,SAAUC,SAPpC,SAACC,GAChBR,EAAQS,KAAKD,KAONjC,IAAMiB,KAAI,SAACkB,GAAD,OACTA,EAAK5B,KACH,kBAAC,IAAO6B,KAAR,CACEhB,IAAKe,EAAKlC,KACVE,KAAMgC,EAAKhC,KACXD,MAAOiC,EAAKjC,QAEZ,c","file":"static/js/main.2b6eb0ae.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Button } from \"antd-mobile\";\nimport React from \"react\";\n\nconst Spin = () => {\n  return (\n    <div\n      className=\"ui-vw-100 ui-vh-100 flex just-center align-center\"\n      style={{ background: \"transparent\", zIndex: 999 }}\n    >\n      <Button loading fill=\"none\" style={{ fontSize: 36 }}></Button>\n    </div>\n  );\n};\nexport default Spin;\n","\nexport const ADD_COUNT = \"add_count\"\nexport const DEL_COUNT = \"del_count\"\nexport const ADD_ASYNC_COUNT = \"add_async_count\"","import { combineReducers } from 'redux';\nimport { ADD_COUNT, DEL_COUNT, ADD_ASYNC_COUNT } from './action-types'\n\n\nfunction counter(state = 9, action) {\n    switch (action.type) {\n        case ADD_COUNT:\n            return state + 1\n        case DEL_COUNT:\n            return state - 1\n        default:\n            return state\n    }\n}\n\nconst initAddress = { name: '北京' };\nfunction homeReducer(state = initAddress, action) {\n    switch (action.type) {\n        case ADD_ASYNC_COUNT:\n            return action.data\n        default:\n            return state\n    }\n}\n// export default counter\n// export default homeReducer\n\nexport default combineReducers({\n    counter,\n    homeReducer\n})","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nimport reducers from './reducers'\n\nexport default createStore(reducers, composeWithDevTools(applyMiddleware(thunk)))\n","import \"./assets/css/style.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport React, { Suspense } from \"react\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport { RootRouter } from \"./router\";\nimport RouterWrapSpin from \"./layout/Spin\";\nimport store from \"./redux/store\";\n\nconst Root = () => {\n  return (\n    <BrowserRouter>\n      <Suspense fallback={<RouterWrapSpin />}>\n        <RootRouter />\n      </Suspense>\n    </BrowserRouter>\n  );\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <Root />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\r\n  AppOutline,\r\n  MessageFill,\r\n  MessageOutline,\r\n  UnorderedListOutline,\r\n  UserOutline,\r\n} from \"antd-mobile-icons\";\r\nimport React, { lazy } from \"react\";\r\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\r\n\r\nimport { Badge } from \"antd-mobile\";\r\nimport MenuList from \"../layout/MenuList\";\r\n\r\n// 使用lazy才有 loading 效果\r\n// import loadable from \"@loadable/component\";\r\n\r\n/** 首页底部菜单 */\r\nexport const menus = [\r\n  {\r\n    path: \"/home/index\",\r\n    title: \"首页\",\r\n    icon: <AppOutline />,\r\n    badge: Badge.dot,\r\n    show: true,\r\n    component: lazy(() =>\r\n      import(/* webpackChunkName: 'index' */ \"../views/home/home\")\r\n    ),\r\n  },\r\n  {\r\n    path: \"/home/study\",\r\n    title: \"我的学习\",\r\n    icon: <UnorderedListOutline />,\r\n    show: true,\r\n    badge: \"5\",\r\n    component: lazy(() =>\r\n      import(/* webpackChunkName: 'study' */ \"../views/home/study\")\r\n    ),\r\n  },\r\n  {\r\n    path: \"/home/message\",\r\n    title: \"我的消息\",\r\n    icon: (active) => (active ? <MessageFill /> : <MessageOutline />),\r\n    badge: \"99+\",\r\n    show: true,\r\n    component: lazy(() =>\r\n      import(/* webpackChunkName: 'message' */ \"../views/home/message\")\r\n    ),\r\n  },\r\n  {\r\n    path: \"/home/personal\",\r\n    title: \"个人中心\",\r\n    icon: <UserOutline />,\r\n    show: true,\r\n    component: lazy(() =>\r\n      import(/* webpackChunkName: 'personal' */ \"../views/home/personal\")\r\n    ),\r\n  },\r\n];\r\n\r\n/** 一级级路由 */\r\nexport const RootRouter = withRouter(() => (\r\n  <Switch>\r\n    <Route\r\n      path=\"/course/subject/:id\"\r\n      component={lazy(() =>\r\n        import(/* webpackChunkName: 'marx' */ \"../views/home/course/subject\")\r\n      )}\r\n    />\r\n    <Route\r\n      path=\"/login\"\r\n      component={lazy(() =>\r\n        import(/* webpackChunkName: 'login' */ \"../views/login\")\r\n      )}\r\n    />\r\n    <MenuList>\r\n      <Route\r\n        path=\"/\"\r\n        render={() => (\r\n          <Switch>\r\n            <Redirect exact={true} from=\"/\" to=\"/home/index\" />\r\n            <Route\r\n              path=\"/home\"\r\n              component={lazy(() =>\r\n                import(/* webpackChunkName: 'home' */ \"../views/home/index\")\r\n              )}\r\n            />\r\n          </Switch>\r\n        )}\r\n      />\r\n    </MenuList>\r\n    <Route path={\"*\"} render={() => <div>404全局</div>} />\r\n  </Switch>\r\n));\r\n\r\n/** 菜单路由 */\r\nexport const MenuRouter = withRouter(() => {\r\n  return (\r\n    <Switch>\r\n      {menus.map((route, idx) => (\r\n        <Route\r\n          key={route.path}\r\n          path={route.path}\r\n          exact={route.exact}\r\n          render={(props) => (\r\n            <route.component {...props} router={route.routes} />\r\n          )}\r\n        />\r\n      ))}\r\n      <Route path=\"*\" render={() => <div>404菜单</div>} />\r\n      {/* <Redirect from=\"/\" to=\"/hacker\" exact={true} /> */}\r\n    </Switch>\r\n  );\r\n});\r\n","import { useHistory, useLocation } from \"react-router\";\n\nimport React from \"react\";\nimport { TabBar } from \"antd-mobile\";\nimport { menus } from \"../../router\";\n\nconst MenuList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const onChange = (value) => {\n    history.push(value);\n  };\n  return (\n    <div className=\"layout-wrap\">\n      <div className=\"flex-1 ui-ovy-a\">{props.children}</div>\n      <div className=\"menu-list\">\n        <TabBar safeArea activeKey={location.pathname} onChange={onChange}>\n          {menus.map((item) =>\n            item.show ? (\n              <TabBar.Item\n                key={item.path}\n                icon={item.icon}\n                title={item.title}\n              />\n            ) : null\n          )}\n        </TabBar>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuList;\n"],"sourceRoot":""}